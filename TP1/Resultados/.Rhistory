Nuevas.reglas.producto = Prod.rules.Demograficas[!reglas.existentes.prod,]
reglas.existentes.DescGen = is.element(DescGen.rules.Demograficas[,"rules"], reglas.DescGen.prunned[,"rules"])
Nuevas.reglas.DescGen = DescGen.rules.Demograficas[!reglas.existentes.DescGen,]
reglas.existentes.SubCat = is.element(SubCat.rules.Demograficas[["rules"]], reglas.SubCat.prunned[["rules"]])
Nuevas.reglas.SubCat = SubCat.rules.Demograficas[!reglas.existentes.SubCat,]
reglas.existentes.Cat = is.element(Cat.rules.Demograficas[["rules"]], reglas.Cat.prunned[["rules"]])
Nuevas.reglas.Cat = Cat.rules.Demograficas[!reglas.existentes.Cat,]
datos = read.csv("TP1_DM - Base Consolidada_SINNEGATIVOS.csv", sep = ",", encoding = 'UTF-8')
datos[["Fecha"]] = as.Date(datos[["Fecha"]], "%d/%m/%Y")
rm(datos)
Prod.rules.Demograficas = apriori(Prod.table, parameter = list(supp = 0.005, conf = 0.6))
Prod.rules.Demograficas@rhs
View(Info.Demograficas)
Info.Demograficas = unique(datos[,c("Venta_ID", "cli_Loc", "CLI_Prv")])
datos = read.csv("TP1_DM - Base Consolidada_SINNEGATIVOS.csv", sep = ",", encoding = 'UTF-8')
Info.Demograficas = unique(datos[,c("Venta_ID", "cli_Loc", "CLI_Prv")])
rm(datos)
View(Info.Demograficas)
Prov.rhs = is.element(Prod.rules.Demograficas@rhs, Info.Demograficas$cli_Loc)
Prod.rules.Demograficas = apriori(Prod.table, parameter = list(supp = 0.005, conf = 0.6))
DescGen.rules.Demograficas = apriori(DescGen.table, parameter = list(supp = 0.005, conf = 0.6))
SubCat.rules.Demograficas = apriori(SubCat.table, parameter = list(supp = 0.005, conf = 0.6))
Cat.rules.Demograficas = apriori(Cat.table, parameter = list(supp = 0.005, conf = 0.6))
###Agregando medidas para las reglas
quality(Prod.rules.Demograficas) = cbind(quality(Prod.rules.Demograficas), Important.measures(Prod.rules.Demograficas, Prod.table))
quality(DescGen.rules.Demograficas) = cbind(quality(DescGen.rules.Demograficas), Important.measures(DescGen.rules.Demograficas, DescGen.table))
quality(SubCat.rules.Demograficas) = cbind(quality(SubCat.rules.Demograficas), Important.measures(SubCat.rules.Demograficas, SubCat.table))
quality(Cat.rules.Demograficas) = cbind(quality(Cat.rules.Demograficas), Important.measures(Cat.rules.Demograficas, Cat.table))
###Podando reglas
Prod.rules.Demograficas = data.frame.rules(Prod.rules.Demograficas)
DescGen.rules.Demograficas = data.frame.rules(DescGen.rules.Demograficas)
SubCat.rules.Demograficas = data.frame.rules(SubCat.rules.Demograficas)
Cat.rules.Demograficas = data.frame.rules(Cat.rules.Demograficas)
asd = strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>")
View(asd)
asd = t(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>"))
View(asd)
asd = t(as.data.frame(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>")))
View(asd)
View(Prod.rules.Demograficas)
Prov.rhs = is.element(asd[,2], Info.Demograficas$cli_Loc)
Prov.rhs
library(stringr)
asd = t(as.data.frame(str_replace(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>"), "[{}]")))
asd = t(as.data.frame(str_replace(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>"), "[{}]", NULL)))
View(asd)
asd = t(as.data.frame(str_replace(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>"), "[{}]", NULL)))
asd
asd = t(as.data.frame(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>")))
View(asd)
fds = str_replace(asd[,2], "[\{\}]", NULL)
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", "-")
fds = str_replace_all(asd[,2], "[\{\}]", NULL)
fds = str_replace_all(asd[,2], "[{}]", NULL)
fds
fds = str_replace_all(asd[,2], "{", NULL)
fds
str_replace(fruits, "([aeiou])", "")
str_replace(fruits, "([aeiou])", "")
str_replace(fruits, "([aeiou])", "\\1\\1")
fds = str_replace_all(asd[,2], "{", "")
fds = str_replace_all(asd[,2], "({})", "")
fds = str_replace(asd[,2], "({})", "")
str_replace(fruits, "[aeiou]", c("1", "2", "3"))
str_replace(fruits, c("a", "e", "i"), "-")
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", "-")
str_replace(fruits, "[aeiou]", "-")
fds = str_replace(asd[,2], "[{}]", "")
fds
fds = str_replace_all(asd[,2], "[{}]", "")
fds
asd[,2]
fds
is.element(fds, Info.Demograficas[["cli_Loc"]])
Info.Demograficas[["cli_Loc"]]
is.element(fds, as.character(Info.Demograficas[["cli_Loc"]]))
as.character(Info.Demograficas[["cli_Loc"]])
fds = str_replace_all(asd[,2], "[ ]", "")
fds
asd = t(as.data.frame(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>")))
fds = str_replace_all(asd[,2], "[{}]", "")
fds = str_replace_all(fds, "[ ]", "")
is.element(fds, as.character(Info.Demograficas[["cli_Loc"]]))
asd = t(as.data.frame(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>")))[,2]
asd
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>")))[,2]
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[{}]", "")
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[ ]", "")
Prod.rules.Demograficas.rhs
to.remove = is.element(Prod.rules.Demograficas.rhs, as.character(Info.Demograficas[["cli_Loc"]]))
to.remove
Prod.rules.Demograficas = Prod.rules.Demograficas[!to.remove,]
View(Prod.rules.Demograficas)
Prod.rules.Demograficas = apriori(Prod.table, parameter = list(supp = 0.005, conf = 0.6))
DescGen.rules.Demograficas = apriori(DescGen.table, parameter = list(supp = 0.005, conf = 0.6))
SubCat.rules.Demograficas = apriori(SubCat.table, parameter = list(supp = 0.005, conf = 0.6))
Cat.rules.Demograficas = apriori(Cat.table, parameter = list(supp = 0.005, conf = 0.6))
###Agregando medidas para las reglas
quality(Prod.rules.Demograficas) = cbind(quality(Prod.rules.Demograficas), Important.measures(Prod.rules.Demograficas, Prod.table))
quality(DescGen.rules.Demograficas) = cbind(quality(DescGen.rules.Demograficas), Important.measures(DescGen.rules.Demograficas, DescGen.table))
quality(SubCat.rules.Demograficas) = cbind(quality(SubCat.rules.Demograficas), Important.measures(SubCat.rules.Demograficas, SubCat.table))
quality(Cat.rules.Demograficas) = cbind(quality(Cat.rules.Demograficas), Important.measures(Cat.rules.Demograficas, Cat.table))
###Podando reglas
Prod.rules.Demograficas = data.frame.rules(Prod.rules.Demograficas)
DescGen.rules.Demograficas = data.frame.rules(DescGen.rules.Demograficas)
SubCat.rules.Demograficas = data.frame.rules(SubCat.rules.Demograficas)
Cat.rules.Demograficas = data.frame.rules(Cat.rules.Demograficas)
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>")))[,2]
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[{}]", "")
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[ ]", "")
to.remove = is.element(Prod.rules.Demograficas.rhs, as.character(Info.Demograficas[["cli_Loc"]]))
to.remove
Prod.rules.Demograficas.No.Loc = Prod.rules.Demograficas[!to.remove,]
View(Prod.rules.Demograficas.No.Loc)
Prod.rules.Demograficas.rhs
nrow(Prod.rules.Demograficas.No.Loc)
to.remove
cbind(Prod.rules.Demograficas.rhs, to.remove)
Prod.rules.Demograficas.No.Loc = Prod.rules.Demograficas[!to.remove,]
View(Prod.rules.Demograficas.No.Loc)
names(Info.Demograficas)
to.remove = is.element(Prod.rules.Demograficas.rhs, as.character(Info.Demograficas[["CLI_Prv"]]))
to.remove
to.remove = is.element(Prod.rules.Demograficas.rhs, as.character(Info.Demograficas[["cli_Loc"]]))
to.remove
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Prod.rules.Demograficas.No.Loc[["rules"]]), "=>")))[,2]
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[{}]", "")
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[ ]", "")
to.remove = is.element(Prod.rules.Demograficas.rhs, as.character(Info.Demograficas[["CLI_Prv"]]))
to.remove
Prod.rules.Demograficas.No.Loc.No.Prv = Prod.rules.Demograficas.No.Loc[!to.remove,]
View(Prod.rules.Demograficas.No.Loc.No.Prv)
sort(Prod.rules.Demograficas[["support"]])
View(Prod.rules.Demograficas)
order(Prod.rules.Demograficas[["support"]])
sort(Prod.rules.Demograficas, by = "support")
sort(Prod.rules.Demograficas, by = support)
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>")))[,2]
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[{}]", "")
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[ ]", "")
to.remove = is.element(Prod.rules.Demograficas.rhs, c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]])))
to.remove
Prod.rules.Demograficas[1,1]
rownames(Prod.rules.Demograficas) = 1:nrow(Prod.rules.Demograficas)
to.remove = is.element(Prod.rules.Demograficas.rhs, c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]])))
to.remove
View(Prod.rules.Demograficas)
c(unique(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]])))
Prod.rules.Demograficas.rhs
sort(c(unique(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Prod.rules.Demograficas[["rules"]]), "=>")))[,2]
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[{}]", "")
Prod.rules.Demograficas.rhs = str_replace(Prod.rules.Demograficas.rhs, "[ ]", "")
Prod.rules.Demograficas.rhs
to.remove = is.element(Prod.rules.Demograficas.rhs, c(unique(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
to.remove
Prod.rules.Demograficas.No.Loc = Prod.rules.Demograficas[!to.remove,]
View(Prod.rules.Demograficas.No.Loc)
to.remove = is.element(Prod.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
Prod.rules.Demograficas.No.Loc = Prod.rules.Demograficas[!to.remove,]
View(Prod.rules.Demograficas.No.Loc)
View(Prod.rules.Demograficas.No.Loc)
asda = subset(Prod.rules.Demograficas.No.Loc, Kulczinsky > 0.6 | Kulczinsky <0.4)
View(asda)
rownames(Nuevas.reglas.producto) = 1:nrow(Nuevas.reglas.producto)
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.producto[["rules"]]), "=>")))[,2]
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[{}]", "")
Prod.rules.Demograficas.rhs = str_replace(Prod.rules.Demograficas.rhs, "[ ]", "")
to.remove = is.element(Prod.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
Prod.rules.Demograficas.No.Loc = Prod.rules.Demograficas[!to.remove,]
asda = subset(Prod.rules.Demograficas.No.Loc, Kulczinsky > 0.6 | Kulczinsky <0.4)
View(asda)
rownames(Nuevas.reglas.producto) = 1:nrow(Nuevas.reglas.producto)
#Prod.rules.Demograficas = sort(Prod.rules.Demograficas, by = support)
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.producto[["rules"]]), "=>")))[,2]
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[{}]", "")
Prod.rules.Demograficas.rhs = str_replace(Prod.rules.Demograficas.rhs, "[ ]", "")
to.remove = is.element(Prod.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
Prod.rules.Demograficas.No.Loc = Nuevas.reglas.producto[!to.remove,]
asda = subset(Prod.rules.Demograficas.No.Loc, Kulczinsky > 0.6 | Kulczinsky <0.4)
View(asda)
asda = as(asda, "rules")
Prod.rules.Demograficas = apriori(Prod.table, parameter = list(supp = 0.005, conf = 0.6))
DescGen.rules.Demograficas = apriori(DescGen.table, parameter = list(supp = 0.005, conf = 0.6))
SubCat.rules.Demograficas = apriori(SubCat.table, parameter = list(supp = 0.005, conf = 0.6))
Cat.rules.Demograficas = apriori(Cat.table, parameter = list(supp = 0.005, conf = 0.6))
###Agregando medidas para las reglas
quality(Prod.rules.Demograficas) = cbind(quality(Prod.rules.Demograficas), Important.measures(Prod.rules.Demograficas, Prod.table))
quality(DescGen.rules.Demograficas) = cbind(quality(DescGen.rules.Demograficas), Important.measures(DescGen.rules.Demograficas, DescGen.table))
quality(SubCat.rules.Demograficas) = cbind(quality(SubCat.rules.Demograficas), Important.measures(SubCat.rules.Demograficas, SubCat.table))
quality(Cat.rules.Demograficas) = cbind(quality(Cat.rules.Demograficas), Important.measures(Cat.rules.Demograficas, Cat.table))
Prod.rules.Demograficas@rhs
as.character(inspect(Prod.rules.Demograficas@rhs))
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(inspect(Prod.rules.Demograficas@rhs)), "=>")))[,2]
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(inspect(Prod.rules.Demograficas@rhs)), "=>")))
Prod.rules.Demograficas.rhs
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character((Prod.rules.Demograficas@rhs)), "=>")))
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(as(Prod.rules.Demograficas@rhs, data.frame)), "=>")))
as(Prod.rules.Demograficas@rhs, data.frame)
Info.Demograficas = unique(datos[,c("Venta_ID", "cli_Loc", "CLI_Prv")])
Info.Demograficas = as.data.frame(binarize(Info.Demograficas[,c("cli_Loc", "CLI_Prv")]))
datos[["Fecha"]] = as.Date(datos[["Fecha"]], "%d/%m/%Y")
datos = read.csv("TP1_DM - Base Consolidada_SINNEGATIVOS.csv", sep = ",", encoding = 'UTF-8')
datos[["Fecha"]] = as.Date(datos[["Fecha"]], "%d/%m/%Y")
Info.Demograficas = unique(datos[,c("Venta_ID", "cli_Loc", "CLI_Prv")])
Info.Demograficas = as.data.frame(binarize(Info.Demograficas[,c("cli_Loc", "CLI_Prv")]))
Info.Demograficas
asdas = apriori(Info.Demograficas)
asdas = apriori(as(Info.Demograficas, "transactions"))
Prod.rules.Demograficas@rhs
as(Prod.rules.Demograficas@rhs, data.frame)
as(Prod.rules.Demograficas@rhs, "data.frame")
asda
is.element(Prod.rules.Demograficas, asda[["rules"]])
Prod.rules.Demograficas
is.element(as(Prod.rules.Demograficas, "data.frame"), asda[["rules"]])
is.element(as(Prod.rules.Demograficas, "data.frame")[,1], asda[["rules"]])
asdasdas = is.element(as(Prod.rules.Demograficas, "data.frame")[,1], asda[["rules"]])
Prod.rules.Demograficas[asdasdas]
library(arulesViz)
plot(Prod.rules.Demograficas)
plot(Prod.rules.Demograficas[asdasdas])
plot(Prod.rules.Demograficas[asdasdas], method="graph")
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(as(Nuevas.reglas.producto[["rules"]])), "=>")))
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.producto[["rules"]]), "=>")))
Prod.rules.Demograficas.rhs
Prod.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.producto[["rules"]]), "=>")))[,2]
Prod.rules.Demograficas.rhs
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[{}]", "")
Prod.rules.Demograficas.rhs = str_replace(Prod.rules.Demograficas.rhs, "[ ]", "")
Prod.rules.Demograficas.rhs
Prod.rules.Demograficas.Final = subset(Prod.rules.Demograficas.No.Loc, Kulczinsky > 0.6 | Kulczinsky <0.4)
plot(Prod.rules.Demograficas[asdasdas], method="paracoord")
Reglas.Prod.Final = is.element(as(Prod.rules.Demograficas, "data.frame")[,1], Prod.rules.Demograficas.Final[["rules"]])
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord")
?plot
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord", control=list(reorder=TRUE))
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord")
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord")
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="matrix")
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="matrix3D")
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="grouped")
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="graph")
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="doubledecker")
plot((Prod.rules.Demograficas[Reglas.Prod.Final][1]), method="doubledecker")
plot((Prod.rules.Demograficas[Reglas.Prod.Final])[1], method="doubledecker")
(Prod.rules.Demograficas[Reglas.Prod.Final])[1]
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="iplots")
install.packages("iplots")
library(iplots)
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="iplots")
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="matrix")
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord")
DescGen.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.DescGen[["rules"]]), "=>")))[,2]
DescGen.rules.Demograficas.rhs
Prod.rules.Demograficas.rhs = str_replace_all(Prod.rules.Demograficas.rhs, "[{}]", "")
Prod.rules.Demograficas.rhs = str_replace(Prod.rules.Demograficas.rhs, "[ ]", "")
Prod.rules.Demograficas.rhs
DescGen.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.DescGen[["rules"]]), "=>")))[,2]
DescGen.rules.Demograficas.rhs = str_replace_all(DescGen.rules.Demograficas.rhs, "[{}]", "")
DescGen.rules.Demograficas.rhs = str_replace(DescGen.rules.Demograficas.rhs, "[ ]", "")
DescGen.rules.Demograficas.rhs
to.remove = is.element(DescGen.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
to.remove
unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]])))
Info.Demograficas = unique(datos[,c("Venta_ID", "cli_Loc", "CLI_Prv")])
DescGen.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.DescGen[["rules"]]), "=>")))[,2]
DescGen.rules.Demograficas.rhs = str_replace_all(DescGen.rules.Demograficas.rhs, "[{}]", "")
DescGen.rules.Demograficas.rhs = str_replace(DescGen.rules.Demograficas.rhs, "[ ]", "")
to.remove = is.element(DescGen.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
to.remove
DescGen.rules.Demograficas.No.Loc = Nuevas.reglas.DescGen[!to.remove,]
DescGen.rules.Demograficas.No.Loc
DescGen.rules.Demograficas.Final = subset(DescGen.rules.Demograficas.No.Loc, Kulczinsky > 0.6 | Kulczinsky <0.4)
DescGen.rules.Demograficas.Final
Reglas.DescGen.Final = is.element(as(DescGen.rules.Demograficas, "data.frame")[,1], DescGen.rules.Demograficas.Final[["rules"]])
Reglas.DescGen.Final
DescGen.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.DescGen[["rules"]]), "=>")))[,2]
DescGen.rules.Demograficas.rhs = str_replace_all(DescGen.rules.Demograficas.rhs, "[{}]", "")
DescGen.rules.Demograficas.rhs = str_replace(DescGen.rules.Demograficas.rhs, "[ ]", "")
to.remove = is.element(DescGen.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
DescGen.rules.Demograficas.No.Loc = Nuevas.reglas.DescGen[!to.remove,]
DescGen.rules.Demograficas.Final = subset(DescGen.rules.Demograficas.No.Loc, Kulczinsky > 0.6 | Kulczinsky <0.4)
DescGen.rules.Demograficas.Final
as(DescGen.rules.Demograficas, "data.frame")[,1]
Reglas.DescGen.Final = is.element(as(DescGen.rules.Demograficas, "data.frame")[,1], DescGen.rules.Demograficas.Final[["rules"]])
Reglas.DescGen.Final
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord")
DescGen.rules.Demograficas.Final[["rules"]]
as(DescGen.rules.Demograficas, "data.frame")[,1]
DescGen.rules.Demograficas.Final[["rules"]]
DescGen.rules.Demograficas = apriori(DescGen.table, parameter = list(supp = 0.005, conf = 0.6))
SubCat.rules.Demograficas = apriori(SubCat.table, parameter = list(supp = 0.005, conf = 0.6))
Cat.rules.Demograficas = apriori(Cat.table, parameter = list(supp = 0.005, conf = 0.6))
Reglas.DescGen.Final = is.element(as(DescGen.rules.Demograficas, "data.frame")[,1], DescGen.rules.Demograficas.Final[["rules"]])
Reglas.DescGen.Final
DescGen.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.DescGen[["rules"]]), "=>")))[,2]
DescGen.rules.Demograficas.rhs
DescGen.rules.Demograficas.rhs = str_replace_all(DescGen.rules.Demograficas.rhs, "[{}]", "")
DescGen.rules.Demograficas.rhs = str_replace(DescGen.rules.Demograficas.rhs, "[ ]", "")
DescGen.rules.Demograficas.rhs
as(DescGen.rules.Demograficas, "data.frame")[,1]
Prod.table = as.matrix(cbind(as.data.frame.matrix(table(Producto[,c("Venta_ID", "Prod_ID")])), Info.Demograficas))
Prod.table = as(Prod.table, "transactions")
DescGen.table = as.matrix(cbind(as.data.frame.matrix(table(Producto[,c("Venta_ID", "DescGen")])), Info.Demograficas))
DescGen.table = as(DescGen.table, "transactions")
SubCat.table = as.matrix(cbind(as.data.frame.matrix(table(Producto[,c("Venta_ID", "SubCat_Desc")])), Info.Demograficas))
SubCat.table = as(SubCat.table, "transactions")
Cat.table = as.matrix(cbind(as.data.frame.matrix(table(Producto[,c("Venta_ID", "Cat_Desc")])), Info.Demograficas))
Cat.table = as(Cat.table, "transactions")
Prod.table = as.matrix(cbind(as.data.frame.matrix(table(Producto[,c("Venta_ID", "Prod_ID")])), Info.Demograficas))
Prod.table = as(Prod.table, "transactions")
datos = read.csv("TP1_DM - Base Consolidada_SINNEGATIVOS.csv", sep = ",", encoding = 'UTF-8')
datos[["Fecha"]] = as.Date(datos[["Fecha"]], "%d/%m/%Y")
#datos = na.omit(datos)
#datos = subset(datos, Fecha > "2015-01-01")
#datos = subset(datos, Fecha < "2015-01-01")
Info.clientes = unique(datos[,c("Venta_ID", "CLI_Gasto", "CLI_Compras", "CLI_CAT_DESC")])
Info.clientes.bin = as.data.frame(binarize(Info.clientes[,c("CLI_Gasto", "CLI_Compras", "CLI_CAT_DESC")]))
####################
Info.Demograficas = unique(datos[,c("Venta_ID", "cli_Loc", "CLI_Prv")])
Info.Demograficas = as.data.frame(binarize(Info.Demograficas[,c("cli_Loc", "CLI_Prv")]))
Producto = datos[,c("Venta_ID", "Prod_ID", "SubCat_Desc", "Cat_Desc", "DescGen")]
Producto[,"Venta_ID"] = as.factor(Producto[,"Venta_ID"])
for(i in 1:ncol(Producto))
Producto[,i] = droplevels(Producto[,i])
rm(datos)
Producto = unique(Producto)
Prod.table = as.matrix(cbind(as.data.frame.matrix(table(Producto[,c("Venta_ID", "Prod_ID")])), Info.Demograficas))
Prod.table = as(Prod.table, "transactions")
DescGen.table = as.matrix(cbind(as.data.frame.matrix(table(Producto[,c("Venta_ID", "DescGen")])), Info.Demograficas))
DescGen.table = as(DescGen.table, "transactions")
SubCat.table = as.matrix(cbind(as.data.frame.matrix(table(Producto[,c("Venta_ID", "SubCat_Desc")])), Info.Demograficas))
SubCat.table = as(SubCat.table, "transactions")
Cat.table = as.matrix(cbind(as.data.frame.matrix(table(Producto[,c("Venta_ID", "Cat_Desc")])), Info.Demograficas))
Cat.table = as(Cat.table, "transactions")
Prod.rules.Demograficas = apriori(Prod.table, parameter = list(supp = 0.005, conf = 0.6))
DescGen.rules.Demograficas = apriori(DescGen.table, parameter = list(supp = 0.005, conf = 0.6))
SubCat.rules.Demograficas = apriori(SubCat.table, parameter = list(supp = 0.005, conf = 0.6))
Cat.rules.Demograficas = apriori(Cat.table, parameter = list(supp = 0.005, conf = 0.6))
quality(Prod.rules.Demograficas) = cbind(quality(Prod.rules.Demograficas), Important.measures(Prod.rules.Demograficas, Prod.table))
quality(DescGen.rules.Demograficas) = cbind(quality(DescGen.rules.Demograficas), Important.measures(DescGen.rules.Demograficas, DescGen.table))
quality(SubCat.rules.Demograficas) = cbind(quality(SubCat.rules.Demograficas), Important.measures(SubCat.rules.Demograficas, SubCat.table))
quality(Cat.rules.Demograficas) = cbind(quality(Cat.rules.Demograficas), Important.measures(Cat.rules.Demograficas, Cat.table))
DescGen.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.DescGen[["rules"]]), "=>")))[,2]
DescGen.rules.Demograficas.rhs = str_replace_all(DescGen.rules.Demograficas.rhs, "[{}]", "")
DescGen.rules.Demograficas.rhs = str_replace(DescGen.rules.Demograficas.rhs, "[ ]", "")
to.remove = is.element(DescGen.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
DescGen.rules.Demograficas.No.Loc = Nuevas.reglas.DescGen[!to.remove,]
DescGen.rules.Demograficas.Final = subset(DescGen.rules.Demograficas.No.Loc, Kulczinsky > 0.6 | Kulczinsky <0.4)
Reglas.DescGen.Final = is.element(as(DescGen.rules.Demograficas, "data.frame")[,1], DescGen.rules.Demograficas.Final[["rules"]])
Reglas.DescGen.Final
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord")
plot(Prod.rules.Demograficas[Reglas.DescGen.Final], method="paracoord")
plot(DescGen.rules.Demograficas[Reglas.DescGen.Final], method="paracoord")
DescGen.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.DescGen[["rules"]]), "=>")))[,2]
DescGen.rules.Demograficas.rhs
DescGen.rules.Demograficas.rhs = str_replace_all(DescGen.rules.Demograficas.rhs, "[{}]", "")
DescGen.rules.Demograficas.rhs = str_replace(DescGen.rules.Demograficas.rhs, "[ ]", "")
to.remove = is.element(DescGen.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
to.remove
Info.Demograficas = unique(datos[,c("Venta_ID", "cli_Loc", "CLI_Prv")])
datos = read.csv("TP1_DM - Base Consolidada_SINNEGATIVOS.csv", sep = ",", encoding = 'UTF-8')
datos[["Fecha"]] = as.Date(datos[["Fecha"]], "%d/%m/%Y")
Info.Demograficas = unique(datos[,c("Venta_ID", "cli_Loc", "CLI_Prv")])
DescGen.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.DescGen[["rules"]]), "=>")))[,2]
DescGen.rules.Demograficas.rhs = str_replace_all(DescGen.rules.Demograficas.rhs, "[{}]", "")
DescGen.rules.Demograficas.rhs = str_replace(DescGen.rules.Demograficas.rhs, "[ ]", "")
to.remove = is.element(DescGen.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
to.remove
DescGen.rules.Demograficas.No.Loc = Nuevas.reglas.DescGen[!to.remove,]
DescGen.rules.Demograficas.No.Loc
DescGen.rules.Demograficas.Final = subset(DescGen.rules.Demograficas.No.Loc, Kulczinsky > 0.6 | Kulczinsky <0.4)
Reglas.DescGen.Final = is.element(as(DescGen.rules.Demograficas, "data.frame")[,1], DescGen.rules.Demograficas.Final[["rules"]])
plot(DescGen.rules.Demograficas[Reglas.DescGen.Final], method="paracoord")
SubCat.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.SubCat[["rules"]]), "=>")))[,2]
SubCat.rules.Demograficas.rhs = str_replace_all(SubCat.rules.Demograficas.rhs, "[{}]", "")
SubCat.rules.Demograficas.rhs = str_replace(SubCat.rules.Demograficas.rhs, "[ ]", "")
SubCat.rules.Demograficas.rhs
to.remove = is.element(SubCat.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
to.remove
SubCat.rules.Demograficas.No.Loc = Nuevas.reglas.SubCat[!to.remove,]
SubCat.rules.Demograficas.Final = subset(SubCat.rules.Demograficas.No.Loc, Kulczinsky > 0.6 | Kulczinsky <0.4)
Reglas.SubCat.Final = is.element(as(SubCat.rules.Demograficas, "data.frame")[,1], SubCat.rules.Demograficas.Final["rules"]]))
Reglas.SubCat.Final = is.element(as(SubCat.rules.Demograficas, "data.frame")[,1], SubCat.rules.Demograficas.Final[["rules"]])
plot(SubCat.rules.Demograficas[Reglas.SubCat.Final], method="paracoord")
SubCat.rules.Demograficas[Reglas.SubCat.Final]
Cat.rules.Demograficas.rhs = t(as.data.frame(strsplit(as.character(Nuevas.reglas.Cat[["rules"]]), "=>")))[,2]
Cat.rules.Demograficas.rhs = str_replace_all(Cat.rules.Demograficas.rhs, "[{}]", "")
Cat.rules.Demograficas.rhs = str_replace(Cat.rules.Demograficas.rhs, "[ ]", "")
Cat.rules.Demograficas.rhs
to.remove = is.element(Cat.rules.Demograficas.rhs, unique(c(as.character(Info.Demograficas[["cli_Loc"]]), as.character(Info.Demograficas[["CLI_Prv"]]))))
Cat.rules.Demograficas.No.Loc = Nuevas.reglas.Cat[!to.remove,]
Cat.rules.Demograficas.Final = subset(Cat.rules.Demograficas.No.Loc, Kulczinsky > 0.6 | Kulczinsky <0.4)
Reglas.Cat.Final = is.element(as(Cat.rules.Demograficas, "data.frame")[,1], Cat.rules.Demograficas.Final[["rules"]])
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="paracoord")
Cat.rules.Demograficas[Reglas.Cat.Final]
View(inspect(Cat.rules.Demograficas[Reglas.Cat.Final]))
View(Cat.rules.Demograficas[Reglas.Cat.Final])
View(as(Cat.rules.Demograficas[Reglas.Cat.Final]), "transactions")
View(as(Cat.rules.Demograficas[Reglas.Cat.Final]), "data.frame")
View(as(Cat.rules.Demograficas[Reglas.Cat.Final], "data.frame"))
Cat.rules.Demograficas[Reglas.Cat.Final]@rhs
inspect(Cat.rules.Demograficas[Reglas.Cat.Final]@rhs)
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="graph")
View(as(Cat.rules.Demograficas[Reglas.Cat.Final], "data.frame"))
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="paracoord", shading = "Kulczinsky")
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="graph", shading = "Kulczinsky")
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="grouped", shading = "Kulczinsky")
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="scatterplot", shading = "Kulczinsky")
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="grouped", interactive = T, control = list(main = "Categoría"))
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="grouped", interactive = T, control = list(main = "Categoría"))
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="paracoord", control = list(main = "Categoría"))
plot(DescGen.rules.Demograficas[Reglas.DescGen.Final], method="paracoord", , control = list(main = "Reglas demográficas descripción general"))
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord", , control = list(main = "Reglas demográficas productp"))
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord", , control = list(main = "Reglas demográficas producto"))
?par
par(mfrow = c(2,2))
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord", , control = list(main = "Reglas demográficas producto"))
plot(DescGen.rules.Demograficas[Reglas.DescGen.Final], method="paracoord", , control = list(main = "Reglas demográficas descripción general"))
plot(SubCat.rules.Demograficas[Reglas.SubCat.Final], method="paracoord", control = list(main = "Reglas demográficas subcategoría"))
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="paracoord", control = list(main = "Reglas demográficas categoría"))
png("Reglas.demograficas.png", width = 800, height = 1200)
par(mfrow = c(2,2))
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord", , control = list(main = "Reglas demográficas producto"))
plot(DescGen.rules.Demograficas[Reglas.DescGen.Final], method="paracoord", , control = list(main = "Reglas demográficas descripción general"))
plot(SubCat.rules.Demograficas[Reglas.SubCat.Final], method="paracoord", control = list(main = "Reglas demográficas subcategoría"))
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="paracoord", control = list(main = "Reglas demográficas categoría"))
dev.off()
par(op)
png("4_1_Reglas.demograficas_prod.png", width = 800, height = 1200)
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord", , control = list(main = "Reglas demográficas producto"))
dev.off()
png("4_2_Reglas.demograficas_DescGen.png", width = 800, height = 1200)
plot(DescGen.rules.Demograficas[Reglas.DescGen.Final], method="paracoord", , control = list(main = "Reglas demográficas descripción general"))
dev.off()
png("4_3_Reglas.demograficas_SubCat.png", width = 800, height = 1200)
plot(SubCat.rules.Demograficas[Reglas.SubCat.Final], method="paracoord", control = list(main = "Reglas demográficas subcategoría"))
dev.off()
png("4_4_Reglas.demograficas_Cat.png", width = 800, height = 1200)
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="paracoord", control = list(main = "Reglas demográficas categoría"))
dev.off()
png("4_1_Reglas.demograficas_prod.png", width = 800, height = 600)
plot(Prod.rules.Demograficas[Reglas.Prod.Final], method="paracoord", , control = list(main = "Reglas demográficas producto"))
dev.off()
png("4_2_Reglas.demograficas_DescGen.png", width = 800, height = 600)
plot(DescGen.rules.Demograficas[Reglas.DescGen.Final], method="paracoord", , control = list(main = "Reglas demográficas descripción general"))
dev.off()
png("4_3_Reglas.demograficas_SubCat.png", width = 800, height = 600)
plot(SubCat.rules.Demograficas[Reglas.SubCat.Final], method="paracoord", control = list(main = "Reglas demográficas subcategoría"))
dev.off()
png("4_4_Reglas.demograficas_Cat.png", width = 800, height = 600)
plot(Cat.rules.Demograficas[Reglas.Cat.Final], method="paracoord", control = list(main = "Reglas demográficas categoría"))
dev.off()
Reglas.Prod.Final.Demog = (Prod.rules.Demograficas[Reglas.Prod.Final], "data.frame")
Reglas.DescGen.Final.Demog = (DescGen.rules.Demograficas[Reglas.DescGen.Final], "data.frame")
Reglas.Prod.Final.Demog = as(Prod.rules.Demograficas[Reglas.Prod.Final], "data.frame")
Reglas.DescGen.Final.Demog = as(DescGen.rules.Demograficas[Reglas.DescGen.Final], "data.frame")
Reglas.SubCat.Final.Demog = as(SubCat.rules.Demograficas[Reglas.SubCat.Final], "data.frame")
Reglas.Cat.Final.Demog = as(Cat.rules.Demograficas[Reglas.Cat.Final], "data.frame")
Reglas.Prod.Final.Demog = cbind(Reglas.Prod.Final.Demog, rep("Producto"), nrow(Reglas.Prod.Final.Demog))
Reglas.Prod.Final.Demog
Reglas.Prod.Final.Demog = as(Prod.rules.Demograficas[Reglas.Prod.Final], "data.frame")
Reglas.Prod.Final.Demog = cbind(Reglas.Prod.Final.Demog, rep("Producto")))
Reglas.Prod.Final.Demog = cbind(Reglas.Prod.Final.Demog, rep("Producto"))
Reglas.Prod.Final.Demog
Reglas.Prod.Final.Demog = as(Prod.rules.Demograficas[Reglas.Prod.Final], "data.frame")
Reglas.DescGen.Final.Demog = as(DescGen.rules.Demograficas[Reglas.DescGen.Final], "data.frame")
Reglas.SubCat.Final.Demog = as(SubCat.rules.Demograficas[Reglas.SubCat.Final], "data.frame")
Reglas.Cat.Final.Demog = as(Cat.rules.Demograficas[Reglas.Cat.Final], "data.frame")
Reglas.Prod.Final.Demog = cbind(Reglas.Prod.Final.Demog, rep("Producto"))
Reglas.DescGen.Final.Demog = cbind(Reglas.DescGen.Final.Demog, rep("Descripción General"))
Reglas.SubCat.Final.Demog = cbind(Reglas.SubCat.Final.Demog, rep("Subcategoría"))
Reglas.Cat.Final.Demog = cbind(Reglas.Cat.Final.Demog, rep("Categoría"))
colnames(Reglas.DescGen.Final.Demog)[ncol(Reglas.DescGen.Final.Demog)] = "Grupo"
colnames(Reglas.DescGen.Final.Demog)
Reglas.Prod.Final.Demog = as(Prod.rules.Demograficas[Reglas.Prod.Final], "data.frame")
Reglas.DescGen.Final.Demog = as(DescGen.rules.Demograficas[Reglas.DescGen.Final], "data.frame")
Reglas.SubCat.Final.Demog = as(SubCat.rules.Demograficas[Reglas.SubCat.Final], "data.frame")
Reglas.Cat.Final.Demog = as(Cat.rules.Demograficas[Reglas.Cat.Final], "data.frame")
Reglas.Prod.Final.Demog = cbind(Reglas.Prod.Final.Demog, rep("Producto"))
Reglas.DescGen.Final.Demog = cbind(Reglas.DescGen.Final.Demog, rep("Descripción General"))
Reglas.SubCat.Final.Demog = cbind(Reglas.SubCat.Final.Demog, rep("Subcategoría"))
Reglas.Cat.Final.Demog = cbind(Reglas.Cat.Final.Demog, rep("Categoría"))
colnames(Reglas.Prod.Final.Demog)[ncol(Reglas.Prod.Final.Demog)] = "Grupo"
colnames(Reglas.DescGen.Final.Demog)[ncol(Reglas.DescGen.Final.Demog)] = "Grupo"
colnames(Reglas.SubCat.Final.Demog)[ncol(Reglas.SubCat.Final.Demog)] = "Grupo"
colnames(Reglas.Cat.Final.Demog)[ncol(Reglas.Cat.Final.Demog)] = "Grupo"
Reglas.Demo = rbind(Reglas.Prod.Final.Demog, Reglas.DescGen.Final.Demog, Reglas.SubCat.Final.Demog,
Reglas.Cat.Final.Demog)
Reglas.Demo
View(Reglas.Demo)
order(Reglas.Demo[["Kulczinsky"]])
sort(Reglas.Demo[["Kulczinsky"]])
View(Reglas.Demo)
?order
order(Reglas.Demo[["Kulczinsky"]], decreasing = T)
Orden = order(Reglas.Demo[["Kulczinsky"]], decreasing = T)
Reglas.Demo = Reglas.Demo[Orden, ]
View(Reglas.Demo)
Reglas.Demo
View(Reglas.Demo[["rules"]])
Reglas.Demo[["rules"]]
View(Reglas.Demo[["rules"]])
View(Reglas.Demo[,c("rules", "Grupo")])
Reglas.Demo[,c("rules", "Grupo")]
write.xlsx(Reglas.Demo, "4_Reglas.Definitivas.Demograficas.xlsx")
write.xlsx(Reglas.Demo, "4_Reglas.Definitivas.Demograficas.xlsx", row.names = F)
