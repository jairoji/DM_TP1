install.packages("Ebimage")
source("http://bioconductor.org/biocLite.R")
biocLite("EBImage")
Important.measures = function(X, X.Transactions){
Soporte.compartido = interestMeasure(X, method = c("support"),
transactions = X.Transactions)
Soporte.izquierdo = Soporte.compartido/interestMeasure(X, method = c("confidence"),
transactions = X.Transactions)
Confidence = interestMeasure(X, method = c("confidence"),
transactions = X.Transactions)
lift = interestMeasure(X, method = c("lift"),
transactions = X.Transactions)
soporte.derecho = Soporte.compartido /(Soporte.izquierdo*lift)
Kulczinsky = Soporte.compartido*((1/Soporte.izquierdo) + (1/soporte.derecho))/2
IR = abs(Soporte.izquierdo -soporte.derecho)/(Soporte.izquierdo + soporte.derecho - Soporte.compartido)
Other.Measures = interestMeasure(X, method = c("chiSquared", "cosine"),
transactions = X.Transactions)
Measures = cbind(Other.Measures, Kulczinsky, IR)
return(Measures)
}
prunning.fun = function(X){
X <- sort(X, by="lift")
subset.X <- is.subset(X, X)
subset.X[lower.tri(subset.X, diag=T)] <- NA
redundant <- colSums(subset.X, na.rm=T) >= 1
X.pruned <- X[!redundant]
return(X.pruned)
}
data.frame.rules = function(X){
X = prunning.fun(X)
X = sort(X, by="Kulczinsky")
X = as(X, "data.frame")
return(X)
}
setwd("/run/media/ahriman/Stuff/MDMKD/Primer cuatrimestre/DM/TP1/Resultados/")
library(xlsx)
library(reshape)
library(arules)
library(DiscriMiner)
datos = read.csv("TP1_DM - Base Consolidada_SINNEGATIVOS.csv", sep = ",", encoding = 'UTF-8')
datos[["Fecha"]] = as.Date(datos[["Fecha"]], "%d/%m/%Y")
View(datos)
